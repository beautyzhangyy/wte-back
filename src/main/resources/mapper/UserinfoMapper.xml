<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.UserinfoMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.Userinfo">
        <id column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="head_pic" jdbcType="VARCHAR" property="headPic" />
        <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
        <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    </resultMap>
    <sql id="Base_Column_List">
        user_id, user_name, password, nickname, head_pic,user_address,phone_num
    </sql>

    <select id="login" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from userinfo
        where user_name = #{userName,jdbcType=VARCHAR} AND password=#{password,jdbcType=VARCHAR}
    </select>

    <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from userinfo
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from userinfo
        where user_name = #{userName,jdbcType=INTEGER}
    </select>

    <select id="getUserList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from userinfo
        where 1=1
        order by user_id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <insert id="insert" parameterType="com.example.demo.entity.Userinfo">
        insert into userinfo (user_name, password, nickname)
        values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR})
    </insert>

    <update id="updateInfo" parameterType="com.example.demo.entity.Userinfo">
        update userinfo
        set password = #{password,jdbcType=VARCHAR},
            user_address = #{userAddress,jdbcType=VARCHAR},
            phone_num = #{phoneNum,jdbcType=VARCHAR},
            nickname = #{nickname,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <update id="uploadHead">
        update userinfo
        set head_pic = #{headPic,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

</mapper>